#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'

#
# generated by racc
#
require "lib/AST/AbstractMethodException"
require "lib/AST/AllExpression"
require "lib/AST/AndExpression"
require "lib/AST/AnyExpression"
require "lib/AST/AsExpression"
require "lib/AST/BagExpression"
require "lib/AST/BinaryExpression"
require "lib/AST/BooleanTerminal"
require "lib/AST/CommaExpression"
require "lib/AST/DifferentExpression"
require "lib/AST/DivideExpression"
require "lib/AST/DotExpression"
require "lib/AST/EqualExpression"
require "lib/AST/Expression"
require "lib/AST/FloatTerminal"
require "lib/AST/GreatherEqualExpression"
require "lib/AST/GreatherExpression"
require "lib/AST/GroupAsExpression"
require "lib/AST/IncorrectArgumentException"
require "lib/AST/IntegerTerminal"
require "lib/AST/IntersectExpression"
require "lib/AST/LessEqualExpression"
require "lib/AST/LessExpression"
require "lib/AST/MinusExpression"
require "lib/AST/ModuloExpression"
require "lib/AST/MultiplyExpression"
require "lib/AST/NameExpression"
require "lib/AST/OrExpression"
require "lib/AST/PlusExpression"
require "lib/AST/StringTerminal"
require "lib/AST/StructExpression"
require "lib/AST/TerminalExpression"
require "lib/AST/UnaryExpression"
require "lib/AST/UnionExpression"
require "lib/AST/UniqueExpression"
require "lib/AST/Utils"
require "lib/AST/WhereExpression"

require 'lib/Parser/SBQL.rex'

include AST
class SBQLParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    30,    32,    10,    37,    39,    42,    17,    19,    47,     1,
     3,     5,     8,     9,    11,    40,    43,    16,    46,    48,
    27,    28,    29,    31,    34,    36,    38,    41,    44,    45,
    21,    25,     2,     6,    33,    35,    12,    13,    14,    15,
    18,    20,    30,    32,    10,    37,    39,    42,    17,    19,
    47,     1,     3,     5,     8,     9,    11,    40,    43,    16,
    46,    48,    27,    28,    29,    31,    34,    36,    38,    41,
    44,    45,    21,    79,     2,     6,    33,    35,    12,    13,
    14,    15,    18,    20,    10,    30,    32,    30,    17,    19,
    58,     1,     3,     5,     8,     9,    11,   nil,    10,    16,
    30,    32,    17,    19,   nil,     1,     3,     5,     8,     9,
    11,   nil,    21,    16,     2,     6,    30,    32,    12,    13,
    14,    15,    18,    20,    30,    32,    21,   nil,     2,     6,
    30,    32,    12,    13,    14,    15,    18,    20,    10,    30,
    32,   nil,    17,    19,   nil,     1,     3,     5,     8,     9,
    11,   nil,    10,    16,    30,    32,    17,    19,   nil,     1,
     3,     5,     8,     9,    11,   nil,    21,    16,     2,     6,
    30,    32,    12,    13,    14,    15,    18,    20,    30,    32,
    21,   nil,     2,     6,    30,    32,    12,    13,    14,    15,
    18,    20,    10,    30,    32,   nil,    17,    19,   nil,     1,
     3,     5,     8,     9,    11,   nil,    10,    16,    30,    32,
    17,    19,   nil,     1,     3,     5,     8,     9,    11,   nil,
    21,    16,     2,     6,    30,    32,    12,    13,    14,    15,
    18,    20,    30,    32,    21,   nil,     2,     6,   nil,   nil,
    12,    13,    14,    15,    18,    20,    10,   nil,   nil,   nil,
    17,    19,   nil,     1,     3,     5,     8,     9,    11,   nil,
    10,    16,   nil,   nil,    17,    19,   nil,     1,     3,     5,
     8,     9,    11,   nil,    21,    16,     2,     6,   nil,   nil,
    12,    13,    14,    15,    18,    20,   nil,   nil,    21,   nil,
     2,     6,   nil,   nil,    12,    13,    14,    15,    18,    20,
    10,   nil,   nil,   nil,    17,    19,   nil,     1,     3,     5,
     8,     9,    11,   nil,    10,    16,   nil,   nil,    17,    19,
   nil,     1,     3,     5,     8,     9,    11,   nil,    21,    16,
     2,     6,   nil,   nil,    12,    13,    14,    15,    18,    20,
   nil,   nil,    21,   nil,     2,     6,   nil,   nil,    12,    13,
    14,    15,    18,    20,    10,   nil,   nil,   nil,    17,    19,
   nil,     1,     3,     5,     8,     9,    11,   nil,    10,    16,
   nil,   nil,    17,    19,   nil,     1,     3,     5,     8,     9,
    11,   nil,    21,    16,     2,     6,   nil,   nil,    12,    13,
    14,    15,    18,    20,   nil,   nil,    21,   nil,     2,     6,
   nil,   nil,    12,    13,    14,    15,    18,    20,    10,   nil,
   nil,   nil,    17,    19,   nil,     1,     3,     5,     8,     9,
    11,   nil,    10,    16,   nil,   nil,    17,    19,   nil,     1,
     3,     5,     8,     9,    11,   nil,    21,    16,     2,     6,
   nil,   nil,    12,    13,    14,    15,    18,    20,   nil,   nil,
    21,   nil,     2,     6,   nil,   nil,    12,    13,    14,    15,
    18,    20,    10,   nil,   nil,   nil,    17,    19,   nil,     1,
     3,     5,     8,     9,    11,   nil,    10,    16,   nil,   nil,
    17,    19,   nil,     1,     3,     5,     8,     9,    11,   nil,
    21,    16,     2,     6,   nil,   nil,    12,    13,    14,    15,
    18,    20,   nil,   nil,    21,   nil,     2,     6,   nil,   nil,
    12,    13,    14,    15,    18,    20,    10,   nil,   nil,   nil,
    17,    19,   nil,     1,     3,     5,     8,     9,    11,   nil,
    10,    16,   nil,   nil,    17,    19,   nil,     1,     3,     5,
     8,     9,    11,   nil,    21,    16,     2,     6,   nil,   nil,
    12,    13,    14,    15,    18,    20,   nil,   nil,    21,   nil,
     2,     6,   nil,   nil,    12,    13,    14,    15,    18,    20,
    10,   nil,   nil,   nil,    17,    19,   nil,     1,     3,     5,
     8,     9,    11,   nil,    10,    16,   nil,   nil,    17,    19,
   nil,     1,     3,     5,     8,     9,    11,   nil,    21,    16,
     2,     6,   nil,   nil,    12,    13,    14,    15,    18,    20,
   nil,   nil,    21,   nil,     2,     6,   nil,   nil,    12,    13,
    14,    15,    18,    20,    10,   nil,   nil,   nil,    17,    19,
   nil,     1,     3,     5,     8,     9,    11,   nil,    10,    16,
   nil,   nil,    17,    19,   nil,     1,     3,     5,     8,     9,
    11,   nil,    21,    16,     2,     6,   nil,   nil,    12,    13,
    14,    15,    18,    20,   nil,   nil,    21,   nil,     2,     6,
   nil,   nil,    12,    13,    14,    15,    18,    20,    10,   nil,
   nil,   nil,    17,    19,   nil,     1,     3,     5,     8,     9,
    11,   nil,    10,    16,   nil,   nil,    17,    19,   nil,     1,
     3,     5,     8,     9,    11,   nil,    21,    16,     2,     6,
   nil,   nil,    12,    13,    14,    15,    18,    20,   nil,   nil,
    21,   nil,     2,     6,   nil,   nil,    12,    13,    14,    15,
    18,    20,    10,   nil,   nil,   nil,    17,    19,   nil,     1,
     3,     5,     8,     9,    11,   nil,    10,    16,   nil,   nil,
    17,    19,   nil,     1,     3,     5,     8,     9,    11,   nil,
    21,    16,     2,     6,   nil,   nil,    12,    13,    14,    15,
    18,    20,   nil,   nil,    21,   nil,     2,     6,   nil,   nil,
    12,    13,    14,    15,    18,    20,    10,   nil,   nil,   nil,
    17,    19,   nil,     1,     3,     5,     8,     9,    11,   nil,
    10,    16,   nil,   nil,    17,    19,   nil,     1,     3,     5,
     8,     9,    11,   nil,    21,    16,     2,     6,   nil,   nil,
    12,    13,    14,    15,    18,    20,   nil,   nil,    21,   nil,
     2,     6,   nil,   nil,    12,    13,    14,    15,    18,    20,
    10,   nil,   nil,   nil,    17,    19,   nil,     1,     3,     5,
     8,     9,    11,   nil,    10,    16,   nil,   nil,    17,    19,
   nil,     1,     3,     5,     8,     9,    11,   nil,    21,    16,
     2,     6,   nil,   nil,    12,    13,    14,    15,    18,    20,
   nil,   nil,    21,   nil,     2,     6,   nil,   nil,    12,    13,
    14,    15,    18,    20,    10,   nil,   nil,   nil,    17,    19,
   nil,     1,     3,     5,     8,     9,    11,   nil,    10,    16,
   nil,   nil,    17,    19,   nil,     1,     3,     5,     8,     9,
    11,   nil,    21,    16,     2,     6,   nil,   nil,    12,    13,
    14,    15,    18,    20,   nil,   nil,    21,   nil,     2,     6,
   nil,   nil,    12,    13,    14,    15,    18,    20,    10,   nil,
   nil,   nil,    17,    19,   nil,     1,     3,     5,     8,     9,
    11,   nil,    10,    16,   nil,   nil,    17,    19,   nil,     1,
     3,     5,     8,     9,    11,   nil,    21,    16,     2,     6,
   nil,   nil,    12,    13,    14,    15,    18,    20,   nil,   nil,
    21,   nil,     2,     6,   nil,   nil,    12,    13,    14,    15,
    18,    20,    10,   nil,   nil,   nil,    17,    19,   nil,     1,
     3,     5,     8,     9,    11,   nil,   nil,    16,   nil,    30,
    32,   nil,    37,    39,    42,   nil,   nil,    47,   nil,   nil,
    21,   nil,     2,     6,    40,    43,    12,    13,    14,    15,
    18,    20,    30,    32,   nil,    37,    39,    42,   nil,   nil,
    47,   nil,   nil,   nil,   nil,   nil,   nil,    40,    43,   nil,
    46,    48,    27,    28,    29,    31,    34,    36,    38,    41,
    44,    45,   nil,   nil,   nil,   nil,    33,    35,    30,    32,
   nil,    37,    39,    42,   nil,   nil,    47,   nil,   nil,   nil,
   nil,   nil,   nil,    40,    43,   nil,    46,    48,    27,    28,
    29,    31,    34,    36,    38,    41,    44,    45,   nil,    83,
   nil,   nil,    33,    35,    30,    32,   nil,    37,    39,    42,
   nil,   nil,    47,   nil,   nil,   nil,   nil,   nil,   nil,    40,
    43,   nil,    46,    48,    27,    28,    29,    31,    34,    36,
    38,    41,    44,    45,   nil,   nil,   nil,   nil,    33,    35,
    30,    32,   nil,    37,    39,    42,   nil,   nil,    47,   nil,
   nil,   nil,   nil,   nil,   nil,    40,    43,   nil,    46,    48,
    27,    28,    29,    31,    34,    36,    38,    41,    44,    45,
   nil,   nil,    30,    32,    33,    37,    39,    42,   nil,   nil,
    47,   nil,   nil,   nil,   nil,   nil,   nil,    40,    43,   nil,
    46,    48,    27,    28,    29,    31,    34,    36,    38,    41,
    44,    45,    30,    32,   nil,    37,    39,    42,   nil,   nil,
    47,   nil,   nil,   nil,   nil,   nil,   nil,    40,    43,   nil,
    46,    48,    27,    28,    29,    31,    34,    36,    38,    41,
    44,    45,    30,    32,   nil,    37,    39,    42,   nil,   nil,
    47,   nil,   nil,   nil,   nil,   nil,   nil,    40,    43,   nil,
    46,    48,    27,    28,    29,    31,    34,    36,    38,    41,
    44,    45,    30,    32,   nil,    37,    39,    42,   nil,   nil,
    47,   nil,   nil,   nil,   nil,   nil,   nil,    40,    43,   nil,
    46,    48,    27,    28,    29,    31,    34,    36,    38,    41,
    30,    32,   nil,    37,    39,    42,   nil,   nil,    47,   nil,
   nil,   nil,   nil,   nil,   nil,    40,    43,   nil,    46,    48,
    27,    28,    29,    31,    34,    36,    38,    41,    30,    32,
   nil,    37,    39,    42,   nil,   nil,    47,   nil,   nil,   nil,
   nil,   nil,   nil,    40,    43,   nil,    46,    48,    27,    28,
    29,    31,    34,    30,    32,   nil,    37,    39,    42,   nil,
   nil,    47,   nil,   nil,   nil,   nil,   nil,   nil,    40,    43,
   nil,    46,    48,    27,    28,    29,    31,    34,    30,    32,
   nil,    37,    39,    42,   nil,   nil,    47,   nil,   nil,   nil,
   nil,   nil,   nil,    40,    43,   nil,    46,    48,    27,    28,
    29,    31,    34,    30,    32,   nil,    37,    39,    42,   nil,
   nil,    47,    30,    32,   nil,    37,    39,    42,    40,    43,
    47,    46,    48,    27,    28,    29,   nil,    40,    43,   nil,
    46,    48,    27,    28,    29,    30,    32,   nil,    37,    39,
    42,    30,    32,    47,    37,    39,    42,   nil,   nil,    47,
    40,    43,   nil,   nil,   nil,   nil,    40,    43,    30,    32,
   nil,    37,    39,    42,    30,    32,    47,    37,    39,    42,
   nil,   nil,    47,    40,    43,   nil,   nil,   nil,   nil,    40,
    43 ]

racc_action_check = [
    55,    55,    55,    55,    55,    55,    55,    55,    55,    55,
    55,    55,    55,    55,    55,    55,    55,    55,    55,    55,
    55,    55,    55,    55,    55,    55,    55,    55,    55,    55,
    55,     4,    55,    55,    55,    55,    55,    55,    55,    55,
    55,    55,    51,    51,    51,    51,    51,    51,    51,    51,
    51,    51,    51,    51,    51,    51,    51,    51,    51,    51,
    51,    51,    51,    51,    51,    51,    51,    51,    51,    51,
    51,    51,    51,    47,    51,    51,    51,    51,    51,    51,
    51,    51,    51,    51,    31,    56,    56,    64,    31,    31,
    25,    31,    31,    31,    31,    31,    31,   nil,     3,    31,
    52,    52,     3,     3,   nil,     3,     3,     3,     3,     3,
     3,   nil,    31,     3,    31,    31,    50,    50,    31,    31,
    31,    31,    31,    31,    49,    49,     3,   nil,     3,     3,
    81,    81,     3,     3,     3,     3,     3,     3,     0,    69,
    69,   nil,     0,     0,   nil,     0,     0,     0,     0,     0,
     0,   nil,     6,     0,    54,    54,     6,     6,   nil,     6,
     6,     6,     6,     6,     6,   nil,     0,     6,     0,     0,
    71,    71,     0,     0,     0,     0,     0,     0,    72,    72,
     6,   nil,     6,     6,    24,    24,     6,     6,     6,     6,
     6,     6,     1,    74,    74,   nil,     1,     1,   nil,     1,
     1,     1,     1,     1,     1,   nil,     8,     1,    75,    75,
     8,     8,   nil,     8,     8,     8,     8,     8,     8,   nil,
     1,     8,     1,     1,    22,    22,     1,     1,     1,     1,
     1,     1,    82,    82,     8,   nil,     8,     8,   nil,   nil,
     8,     8,     8,     8,     8,     8,     9,   nil,   nil,   nil,
     9,     9,   nil,     9,     9,     9,     9,     9,     9,   nil,
    10,     9,   nil,   nil,    10,    10,   nil,    10,    10,    10,
    10,    10,    10,   nil,     9,    10,     9,     9,   nil,   nil,
     9,     9,     9,     9,     9,     9,   nil,   nil,    10,   nil,
    10,    10,   nil,   nil,    10,    10,    10,    10,    10,    10,
    11,   nil,   nil,   nil,    11,    11,   nil,    11,    11,    11,
    11,    11,    11,   nil,    13,    11,   nil,   nil,    13,    13,
   nil,    13,    13,    13,    13,    13,    13,   nil,    11,    13,
    11,    11,   nil,   nil,    11,    11,    11,    11,    11,    11,
   nil,   nil,    13,   nil,    13,    13,   nil,   nil,    13,    13,
    13,    13,    13,    13,    16,   nil,   nil,   nil,    16,    16,
   nil,    16,    16,    16,    16,    16,    16,   nil,    17,    16,
   nil,   nil,    17,    17,   nil,    17,    17,    17,    17,    17,
    17,   nil,    16,    17,    16,    16,   nil,   nil,    16,    16,
    16,    16,    16,    16,   nil,   nil,    17,   nil,    17,    17,
   nil,   nil,    17,    17,    17,    17,    17,    17,    19,   nil,
   nil,   nil,    19,    19,   nil,    19,    19,    19,    19,    19,
    19,   nil,    21,    19,   nil,   nil,    21,    21,   nil,    21,
    21,    21,    21,    21,    21,   nil,    19,    21,    19,    19,
   nil,   nil,    19,    19,    19,    19,    19,    19,   nil,   nil,
    21,   nil,    21,    21,   nil,   nil,    21,    21,    21,    21,
    21,    21,    48,   nil,   nil,   nil,    48,    48,   nil,    48,
    48,    48,    48,    48,    48,   nil,    46,    48,   nil,   nil,
    46,    46,   nil,    46,    46,    46,    46,    46,    46,   nil,
    48,    46,    48,    48,   nil,   nil,    48,    48,    48,    48,
    48,    48,   nil,   nil,    46,   nil,    46,    46,   nil,   nil,
    46,    46,    46,    46,    46,    46,    45,   nil,   nil,   nil,
    45,    45,   nil,    45,    45,    45,    45,    45,    45,   nil,
    44,    45,   nil,   nil,    44,    44,   nil,    44,    44,    44,
    44,    44,    44,   nil,    45,    44,    45,    45,   nil,   nil,
    45,    45,    45,    45,    45,    45,   nil,   nil,    44,   nil,
    44,    44,   nil,   nil,    44,    44,    44,    44,    44,    44,
    43,   nil,   nil,   nil,    43,    43,   nil,    43,    43,    43,
    43,    43,    43,   nil,    27,    43,   nil,   nil,    27,    27,
   nil,    27,    27,    27,    27,    27,    27,   nil,    43,    27,
    43,    43,   nil,   nil,    43,    43,    43,    43,    43,    43,
   nil,   nil,    27,   nil,    27,    27,   nil,   nil,    27,    27,
    27,    27,    27,    27,    28,   nil,   nil,   nil,    28,    28,
   nil,    28,    28,    28,    28,    28,    28,   nil,    29,    28,
   nil,   nil,    29,    29,   nil,    29,    29,    29,    29,    29,
    29,   nil,    28,    29,    28,    28,   nil,   nil,    28,    28,
    28,    28,    28,    28,   nil,   nil,    29,   nil,    29,    29,
   nil,   nil,    29,    29,    29,    29,    29,    29,    30,   nil,
   nil,   nil,    30,    30,   nil,    30,    30,    30,    30,    30,
    30,   nil,     2,    30,   nil,   nil,     2,     2,   nil,     2,
     2,     2,     2,     2,     2,   nil,    30,     2,    30,    30,
   nil,   nil,    30,    30,    30,    30,    30,    30,   nil,   nil,
     2,   nil,     2,     2,   nil,   nil,     2,     2,     2,     2,
     2,     2,    42,   nil,   nil,   nil,    42,    42,   nil,    42,
    42,    42,    42,    42,    42,   nil,    33,    42,   nil,   nil,
    33,    33,   nil,    33,    33,    33,    33,    33,    33,   nil,
    42,    33,    42,    42,   nil,   nil,    42,    42,    42,    42,
    42,    42,   nil,   nil,    33,   nil,    33,    33,   nil,   nil,
    33,    33,    33,    33,    33,    33,    34,   nil,   nil,   nil,
    34,    34,   nil,    34,    34,    34,    34,    34,    34,   nil,
    35,    34,   nil,   nil,    35,    35,   nil,    35,    35,    35,
    35,    35,    35,   nil,    34,    35,    34,    34,   nil,   nil,
    34,    34,    34,    34,    34,    34,   nil,   nil,    35,   nil,
    35,    35,   nil,   nil,    35,    35,    35,    35,    35,    35,
    36,   nil,   nil,   nil,    36,    36,   nil,    36,    36,    36,
    36,    36,    36,   nil,    37,    36,   nil,   nil,    37,    37,
   nil,    37,    37,    37,    37,    37,    37,   nil,    36,    37,
    36,    36,   nil,   nil,    36,    36,    36,    36,    36,    36,
   nil,   nil,    37,   nil,    37,    37,   nil,   nil,    37,    37,
    37,    37,    37,    37,    38,   nil,   nil,   nil,    38,    38,
   nil,    38,    38,    38,    38,    38,    38,   nil,    39,    38,
   nil,   nil,    39,    39,   nil,    39,    39,    39,    39,    39,
    39,   nil,    38,    39,    38,    38,   nil,   nil,    38,    38,
    38,    38,    38,    38,   nil,   nil,    39,   nil,    39,    39,
   nil,   nil,    39,    39,    39,    39,    39,    39,    40,   nil,
   nil,   nil,    40,    40,   nil,    40,    40,    40,    40,    40,
    40,   nil,    41,    40,   nil,   nil,    41,    41,   nil,    41,
    41,    41,    41,    41,    41,   nil,    40,    41,    40,    40,
   nil,   nil,    40,    40,    40,    40,    40,    40,   nil,   nil,
    41,   nil,    41,    41,   nil,   nil,    41,    41,    41,    41,
    41,    41,    32,   nil,   nil,   nil,    32,    32,   nil,    32,
    32,    32,    32,    32,    32,   nil,   nil,    32,   nil,    80,
    80,   nil,    80,    80,    80,   nil,   nil,    80,   nil,   nil,
    32,   nil,    32,    32,    80,    80,    32,    32,    32,    32,
    32,    32,     7,     7,   nil,     7,     7,     7,   nil,   nil,
     7,   nil,   nil,   nil,   nil,   nil,   nil,     7,     7,   nil,
     7,     7,     7,     7,     7,     7,     7,     7,     7,     7,
     7,     7,   nil,   nil,   nil,   nil,     7,     7,    57,    57,
   nil,    57,    57,    57,   nil,   nil,    57,   nil,   nil,   nil,
   nil,   nil,   nil,    57,    57,   nil,    57,    57,    57,    57,
    57,    57,    57,    57,    57,    57,    57,    57,   nil,    57,
   nil,   nil,    57,    57,    53,    53,   nil,    53,    53,    53,
   nil,   nil,    53,   nil,   nil,   nil,   nil,   nil,   nil,    53,
    53,   nil,    53,    53,    53,    53,    53,    53,    53,    53,
    53,    53,    53,    53,   nil,   nil,   nil,   nil,    53,    53,
    67,    67,   nil,    67,    67,    67,   nil,   nil,    67,   nil,
   nil,   nil,   nil,   nil,   nil,    67,    67,   nil,    67,    67,
    67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
   nil,   nil,    26,    26,    67,    26,    26,    26,   nil,   nil,
    26,   nil,   nil,   nil,   nil,   nil,   nil,    26,    26,   nil,
    26,    26,    26,    26,    26,    26,    26,    26,    26,    26,
    26,    26,    65,    65,   nil,    65,    65,    65,   nil,   nil,
    65,   nil,   nil,   nil,   nil,   nil,   nil,    65,    65,   nil,
    65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
    65,    65,    23,    23,   nil,    23,    23,    23,   nil,   nil,
    23,   nil,   nil,   nil,   nil,   nil,   nil,    23,    23,   nil,
    23,    23,    23,    23,    23,    23,    23,    23,    23,    23,
    23,    23,    76,    76,   nil,    76,    76,    76,   nil,   nil,
    76,   nil,   nil,   nil,   nil,   nil,   nil,    76,    76,   nil,
    76,    76,    76,    76,    76,    76,    76,    76,    76,    76,
    77,    77,   nil,    77,    77,    77,   nil,   nil,    77,   nil,
   nil,   nil,   nil,   nil,   nil,    77,    77,   nil,    77,    77,
    77,    77,    77,    77,    77,    77,    77,    77,    73,    73,
   nil,    73,    73,    73,   nil,   nil,    73,   nil,   nil,   nil,
   nil,   nil,   nil,    73,    73,   nil,    73,    73,    73,    73,
    73,    73,    73,    68,    68,   nil,    68,    68,    68,   nil,
   nil,    68,   nil,   nil,   nil,   nil,   nil,   nil,    68,    68,
   nil,    68,    68,    68,    68,    68,    68,    68,    70,    70,
   nil,    70,    70,    70,   nil,   nil,    70,   nil,   nil,   nil,
   nil,   nil,   nil,    70,    70,   nil,    70,    70,    70,    70,
    70,    70,    70,    66,    66,   nil,    66,    66,    66,   nil,
   nil,    66,    63,    63,   nil,    63,    63,    63,    66,    66,
    63,    66,    66,    66,    66,    66,   nil,    63,    63,   nil,
    63,    63,    63,    63,    63,    59,    59,   nil,    59,    59,
    59,    60,    60,    59,    60,    60,    60,   nil,   nil,    60,
    59,    59,   nil,   nil,   nil,   nil,    60,    60,    61,    61,
   nil,    61,    61,    61,    78,    78,    61,    78,    78,    78,
   nil,   nil,    78,    61,    61,   nil,   nil,   nil,   nil,    78,
    78 ]

racc_action_pointer = [
   134,   188,   688,    94,    31,   nil,   148,  1040,   202,   242,
   256,   296,   nil,   310,   nil,   nil,   350,   364,   nil,   404,
   nil,   418,   222,  1240,   182,    90,  1180,   580,   620,   634,
   674,    80,   998,   742,   782,   796,   836,   850,   890,   904,
   944,   958,   728,   566,   526,   512,   472,    60,   458,   122,
   114,    40,    98,  1112,   152,    -2,    83,  1076,   nil,  1433,
  1439,  1456,   nil,  1410,    85,  1210,  1401,  1148,  1351,   137,
  1376,   168,   176,  1326,   191,   206,  1270,  1298,  1462,   nil,
  1017,   128,   230,   nil ]

racc_action_default = [
   -43,   -43,   -43,   -43,   -43,   -31,   -43,    -1,   -43,   -43,
   -43,   -43,    -3,   -43,   -27,   -28,   -43,   -43,   -29,   -43,
   -30,   -43,   -23,   -35,   -24,   -43,   -21,   -43,   -43,   -43,
   -43,   -43,   -43,   -43,   -43,   -43,   -43,   -43,   -43,   -43,
   -43,   -43,   -43,   -43,   -43,   -43,   -43,   -43,   -43,   -32,
   -34,   -43,   -33,   -25,    -8,   -43,   -22,   -43,    84,   -13,
   -16,   -17,    -2,   -41,   -20,   -10,   -42,   -15,   -38,   -14,
   -40,   -18,    -6,   -39,   -19,    -9,   -36,   -37,   -11,   -26,
   -12,    -5,    -7,    -4 ]

racc_goto_table = [
     7,    22,    23,    24,     4,   nil,    26,   nil,    49,    50,
    51,    52,   nil,    53,   nil,   nil,    54,    55,   nil,    56,
   nil,    57,   nil,   nil,   nil,   nil,   nil,    59,    60,    61,
    62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
    72,    73,    74,    75,    76,    77,    78,   nil,    80,   nil,
   nil,    81,   nil,   nil,   nil,    82 ]

racc_goto_check = [
     2,     2,     2,     2,     1,   nil,     2,   nil,     2,     2,
     2,     2,   nil,     2,   nil,   nil,     2,     2,   nil,     2,
   nil,     2,   nil,   nil,   nil,   nil,   nil,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,   nil,     2,   nil,
   nil,     2,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,     4,     0 ]

racc_goto_default = [
   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 45, :_reduce_none,
  3, 46, :_reduce_2,
  1, 46, :_reduce_3,
  3, 46, :_reduce_4,
  3, 46, :_reduce_5,
  3, 46, :_reduce_6,
  3, 46, :_reduce_7,
  2, 46, :_reduce_8,
  3, 46, :_reduce_9,
  3, 46, :_reduce_10,
  3, 46, :_reduce_11,
  3, 46, :_reduce_12,
  3, 46, :_reduce_13,
  3, 46, :_reduce_14,
  3, 46, :_reduce_15,
  3, 46, :_reduce_16,
  3, 46, :_reduce_17,
  3, 46, :_reduce_18,
  3, 46, :_reduce_19,
  3, 46, :_reduce_20,
  2, 46, :_reduce_21,
  2, 46, :_reduce_22,
  2, 46, :_reduce_23,
  2, 46, :_reduce_24,
  2, 46, :_reduce_25,
  3, 46, :_reduce_26,
  1, 46, :_reduce_27,
  1, 46, :_reduce_28,
  1, 46, :_reduce_29,
  1, 46, :_reduce_30,
  1, 46, :_reduce_31,
  2, 46, :_reduce_32,
  2, 46, :_reduce_33,
  2, 46, :_reduce_34,
  2, 46, :_reduce_35,
  3, 46, :_reduce_36,
  3, 46, :_reduce_37,
  3, 46, :_reduce_38,
  3, 46, :_reduce_39,
  3, 46, :_reduce_40,
  3, 46, :_reduce_41,
  3, 46, :_reduce_42 ]

racc_reduce_n = 43

racc_shift_n = 84

racc_token_table = {
  false => 0,
  :error => 1,
  :COMMA => 2,
  :WHERE => 3,
  :ANY => 4,
  :JOIN => 5,
  :UNION => 6,
  :INTERSECT => 7,
  :ALL => 8,
  :EXISTS => 9,
  :GROUPAS => 10,
  :MAX => 11,
  :MIN => 12,
  :NAME => 13,
  :NOT => 14,
  :PICKRANDOM => 15,
  :SUM => 16,
  :AS => 17,
  :DIFFERENCE => 18,
  :AVG => 19,
  :EQUAL => 20,
  :GREATEREQUAL => 21,
  :GREATER => 22,
  :SMALLEREQUAL => 23,
  :SMALLER => 24,
  :AND => 25,
  :OR => 26,
  :MULTIPLY => 27,
  :DIVIDE => 28,
  :MODULO => 29,
  :PLUS => 30,
  :MINUS => 31,
  :LEFT_ROUND_BRACKET => 32,
  :RIGHT_ROUND_BRACKET => 33,
  :STRUCT => 34,
  :BAG => 35,
  :DOT => 36,
  :ORDERBY => 37,
  :expr_without_coma => 38,
  :UNIQUE => 39,
  :INTEGER_LITERAL => 40,
  :DOUBLE_LITERAL => 41,
  :STRING_LITERAL => 42,
  :BOOLEAN_LITERAL => 43 }

racc_nt_base = 44

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "COMMA",
  "WHERE",
  "ANY",
  "JOIN",
  "UNION",
  "INTERSECT",
  "ALL",
  "EXISTS",
  "GROUPAS",
  "MAX",
  "MIN",
  "NAME",
  "NOT",
  "PICKRANDOM",
  "SUM",
  "AS",
  "DIFFERENCE",
  "AVG",
  "EQUAL",
  "GREATEREQUAL",
  "GREATER",
  "SMALLEREQUAL",
  "SMALLER",
  "AND",
  "OR",
  "MULTIPLY",
  "DIVIDE",
  "MODULO",
  "PLUS",
  "MINUS",
  "LEFT_ROUND_BRACKET",
  "RIGHT_ROUND_BRACKET",
  "STRUCT",
  "BAG",
  "DOT",
  "ORDERBY",
  "expr_without_coma",
  "UNIQUE",
  "INTEGER_LITERAL",
  "DOUBLE_LITERAL",
  "STRING_LITERAL",
  "BOOLEAN_LITERAL",
  "$start",
  "target",
  "expr" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'SBQL.racc', 20)
  def _reduce_2(val, _values, result)
     result = CommaExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 21)
  def _reduce_3(val, _values, result)
     result = e 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 22)
  def _reduce_4(val, _values, result)
     result = StructExpression.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 23)
  def _reduce_5(val, _values, result)
     result = AnyExpression.new(val[1],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 24)
  def _reduce_6(val, _values, result)
     result = AsExpression.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 25)
  def _reduce_7(val, _values, result)
     result = AllExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 26)
  def _reduce_8(val, _values, result)
    result = AvgExpression.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 27)
  def _reduce_9(val, _values, result)
     result = DifferentExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 28)
  def _reduce_10(val, _values, result)
     result = DotExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 29)
  def _reduce_11(val, _values, result)
     result = EqualExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 30)
  def _reduce_12(val, _values, result)
     result = GreatherEqualExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 31)
  def _reduce_13(val, _values, result)
     result = GreatherExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 32)
  def _reduce_14(val, _values, result)
     result = JoinExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 33)
  def _reduce_15(val, _values, result)
     result = OrderByExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 34)
  def _reduce_16(val, _values, result)
     result = LessEqualExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 35)
  def _reduce_17(val, _values, result)
     result = LessExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 36)
  def _reduce_18(val, _values, result)
     result = UnionExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 37)
  def _reduce_19(val, _values, result)
     result = IntersectExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 38)
  def _reduce_20(val, _values, result)
     result = WhereExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 39)
  def _reduce_21(val, _values, result)
     result = BagExpression.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 40)
  def _reduce_22(val, _values, result)
     result = ExistsExpression.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 41)
  def _reduce_23(val, _values, result)
     result = MaxExpression.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 42)
  def _reduce_24(val, _values, result)
     result = MinExpression.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 43)
  def _reduce_25(val, _values, result)
     result = new UniqueExpression(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 44)
  def _reduce_26(val, _values, result)
     result = GroupAsExpression.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 45)
  def _reduce_27(val, _values, result)
     result = (val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 46)
  def _reduce_28(val, _values, result)
     result = (val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 47)
  def _reduce_29(val, _values, result)
     result = (val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 48)
  def _reduce_30(val, _values, result)
     result = (val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 49)
  def _reduce_31(val, _values, result)
     result = NameExpression.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 50)
  def _reduce_32(val, _values, result)
     result = NotExpression.new(val[1])  
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 51)
  def _reduce_33(val, _values, result)
     result = SumExpression.new(val[1])  
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 52)
  def _reduce_34(val, _values, result)
     result = PickRandomExpression.new(val[1])  
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 53)
  def _reduce_35(val, _values, result)
     result = StructExpression.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 54)
  def _reduce_36(val, _values, result)
     result = PlusExpression.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 55)
  def _reduce_37(val, _values, result)
     result = MinusExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 56)
  def _reduce_38(val, _values, result)
     result = MultiplyExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 57)
  def _reduce_39(val, _values, result)
     result = ModuloExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 58)
  def _reduce_40(val, _values, result)
     result = DivideExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 59)
  def _reduce_41(val, _values, result)
     result = AndExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 60)
  def _reduce_42(val, _values, result)
     result = OrExpression.new(val[0],val[2]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class SBQLParser
