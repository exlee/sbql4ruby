#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'

#
# generated by racc
#
require "lib/AST/AbstractMethodException"
require "lib/AST/AllExpression"
require "lib/AST/AndExpression"
require "lib/AST/AnyExpression"
require "lib/AST/AsExpression"
require "lib/AST/BagExpression"
require "lib/AST/BinaryExpression"
require "lib/AST/BooleanTerminal"
require "lib/AST/CommaExpression"
require "lib/AST/DifferentExpression"
require "lib/AST/DivideExpression"
require "lib/AST/DotExpression"
require "lib/AST/EqualExpression"
require "lib/AST/Expression"
require "lib/AST/FloatTerminal"
require "lib/AST/GreatherEqualExpression"
require "lib/AST/GreatherExpression"
require "lib/AST/GroupAsExpression"
require "lib/AST/IncorrectArgumentException"
require "lib/AST/IntegerTerminal"
require "lib/AST/InExpression"
require "lib/AST/IntersectExpression"
require "lib/AST/LessEqualExpression"
require "lib/AST/LessExpression"
require "lib/AST/MinusExpression"
require "lib/AST/ModuloExpression"
require "lib/AST/MultiplyExpression"
require "lib/AST/NameExpression"
require "lib/AST/OrExpression"
require "lib/AST/PlusExpression"
require "lib/AST/StringTerminal"
require "lib/AST/StructExpression"
require "lib/AST/TerminalExpression"
require "lib/AST/UnaryExpression"
require "lib/AST/UnionExpression"
require "lib/AST/UniqueExpression"
require "lib/AST/Utils"
require "lib/AST/WhereExpression"
require "lib/AST/SetMinusExpression"

require 'lib/Parser/SBQL.rex'

include AST
class SBQLParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     3,    62,     6,     9,    12,    14,    16,    19,    20,    28,
    31,    34,     4,     7,    10,     3,    74,     6,     9,    12,
    14,    16,    19,    20,    28,    31,    34,     4,     7,    10,
    41,    43,    45,    28,    31,    34,    11,    13,    15,    17,
    18,    21,     1,     2,    28,    31,    34,    24,    75,   nil,
   nil,    11,    13,    15,    17,    18,    21,     1,     2,     3,
   nil,     6,     9,    12,    14,    16,    19,    20,   nil,   nil,
   nil,     4,     7,    10,     3,   nil,     6,     9,    12,    14,
    16,    19,    20,    28,    31,    34,     4,     7,    10,    41,
    43,    45,   nil,   nil,   nil,    11,    13,    15,    17,    18,
    21,     1,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    11,    13,    15,    17,    18,    21,     1,     2,     3,   nil,
     6,     9,    12,    14,    16,    19,    20,   nil,   nil,   nil,
     4,     7,    10,     3,   nil,     6,     9,    12,    14,    16,
    19,    20,    28,    31,    34,     4,     7,    10,    41,    43,
    45,   nil,   nil,   nil,    11,    13,    15,    17,    18,    21,
     1,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    11,
    13,    15,    17,    18,    21,     1,     2,     3,   nil,     6,
     9,    12,    14,    16,    19,    20,   nil,   nil,   nil,     4,
     7,    10,     3,   nil,     6,     9,    12,    14,    16,    19,
    20,    28,    31,    34,     4,     7,    10,    41,    43,    45,
   nil,   nil,   nil,    11,    13,    15,    17,    18,    21,     1,
     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    11,    13,
    15,    17,    18,    21,     1,     2,     3,   nil,     6,     9,
    12,    14,    16,    19,    20,   nil,   nil,   nil,     4,     7,
    10,     3,   nil,     6,     9,    12,    14,    16,    19,    20,
   nil,   nil,   nil,     4,     7,    10,   nil,   nil,   nil,   nil,
   nil,   nil,    11,    13,    15,    17,    18,    21,     1,     2,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    11,    13,    15,
    17,    18,    21,     1,     2,     3,   nil,     6,     9,    12,
    14,    16,    19,    20,   nil,   nil,   nil,     4,     7,    10,
     3,   nil,     6,     9,    12,    14,    16,    19,    20,   nil,
   nil,   nil,     4,     7,    10,   nil,   nil,   nil,   nil,   nil,
   nil,    11,    13,    15,    17,    18,    21,     1,     2,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    11,    13,    15,    17,
    18,    21,     1,     2,     3,   nil,     6,     9,    12,    14,
    16,    19,    20,   nil,   nil,   nil,     4,     7,    10,     3,
   nil,     6,     9,    12,    14,    16,    19,    20,   nil,   nil,
   nil,     4,     7,    10,   nil,   nil,   nil,   nil,   nil,   nil,
    11,    13,    15,    17,    18,    21,     1,     2,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    11,    13,    15,    17,    18,
    21,     1,     2,     3,   nil,     6,     9,    12,    14,    16,
    19,    20,   nil,   nil,   nil,     4,     7,    10,     3,   nil,
     6,     9,    12,    14,    16,    19,    20,   nil,   nil,   nil,
     4,     7,    10,   nil,   nil,   nil,   nil,   nil,   nil,    11,
    13,    15,    17,    18,    21,     1,     2,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    11,    13,    15,    17,    18,    21,
     1,     2,     3,    60,     6,     9,    12,    14,    16,    19,
    20,    28,    31,    34,     4,     7,    10,    41,    43,    45,
    47,    49,    27,    30,    33,    37,    38,    40,    42,    44,
    46,    48,    50,    29,    32,    35,    36,    39,    11,    13,
    15,    17,    18,    21,     1,     2,     3,   nil,     6,     9,
    12,    14,    16,    19,    20,    28,    31,    34,     4,     7,
    10,    41,    43,    45,    47,    49,    27,    30,    33,    37,
    38,    40,    42,    44,    46,    48,    50,    29,    32,    35,
    36,    39,    11,    13,    15,    17,    18,    21,     1,     2,
     3,   nil,     6,     9,    12,    14,    16,    19,    20,    28,
    31,    34,     4,     7,    10,    41,    43,    45,    47,    49,
    27,    30,    33,    37,    38,    40,    42,    44,    46,    48,
    50,    29,    32,    35,    36,    39,    11,    13,    15,    17,
    18,    21,     1,     2,     3,   nil,     6,     9,    12,    14,
    16,    19,    20,    28,    31,    34,     4,     7,    10,    41,
    43,    45,    47,    49,    27,    30,    33,    37,    38,    40,
    42,    44,    46,    48,    50,    29,    32,    35,    36,    39,
    11,    13,    15,    17,    18,    21,     1,     2,     3,   nil,
     6,     9,    12,    14,    16,    19,    20,   nil,   nil,   nil,
     4,     7,    10,     3,   nil,     6,     9,    12,    14,    16,
    19,    20,   nil,   nil,   nil,     4,     7,    10,   nil,   nil,
   nil,   nil,   nil,   nil,    11,    13,    15,    17,    18,    21,
     1,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    11,
    13,    15,    17,    18,    21,     1,     2,     3,   nil,     6,
     9,    12,    14,    16,    19,    20,   nil,   nil,   nil,     4,
     7,    10,     3,   nil,     6,     9,    12,    14,    16,    19,
    20,   nil,   nil,   nil,     4,     7,    10,   nil,   nil,   nil,
   nil,   nil,   nil,    11,    13,    15,    17,    18,    21,     1,
     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    11,    13,
    15,    17,    18,    21,     1,     2,     3,   nil,     6,     9,
    12,    14,    16,    19,    20,   nil,   nil,   nil,     4,     7,
    10,     3,   nil,     6,     9,    12,    14,    16,    19,    20,
   nil,   nil,   nil,     4,     7,    10,   nil,   nil,   nil,   nil,
   nil,   nil,    11,    13,    15,    17,    18,    21,     1,     2,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    11,    13,    15,
    17,    18,    21,     1,     2,     3,   nil,     6,     9,    12,
    14,    16,    19,    20,   nil,   nil,   nil,     4,     7,    10,
     3,   nil,     6,     9,    12,    14,    16,    19,    20,   nil,
   nil,   nil,     4,     7,    10,   nil,   nil,   nil,   nil,   nil,
   nil,    11,    13,    15,    17,    18,    21,     1,     2,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    11,    13,    15,    17,
    18,    21,     1,     2,     3,   nil,     6,     9,    12,    14,
    16,    19,    20,   nil,   nil,   nil,     4,     7,    10,     3,
   nil,     6,     9,    12,    14,    16,    19,    20,   nil,   nil,
   nil,     4,     7,    10,   nil,   nil,   nil,   nil,   nil,   nil,
    11,    13,    15,    17,    18,    21,     1,     2,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    11,    13,    15,    17,    18,
    21,     1,     2,     3,   nil,     6,     9,    12,    14,    16,
    19,    20,   nil,   nil,   nil,     4,     7,    10,     3,   nil,
     6,     9,    12,    14,    16,    19,    20,   nil,   nil,   nil,
     4,     7,    10,   nil,   nil,   nil,   nil,   nil,   nil,    11,
    13,    15,    17,    18,    21,     1,     2,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    11,    13,    15,    17,    18,    21,
     1,     2,     3,   nil,     6,     9,    12,    14,    16,    19,
    20,   nil,   nil,   nil,     4,     7,    10,     3,   nil,     6,
     9,    12,    14,    16,    19,    20,   nil,   nil,   nil,     4,
     7,    10,   nil,   nil,   nil,   nil,   nil,   nil,    11,    13,
    15,    17,    18,    21,     1,     2,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    11,    13,    15,    17,    18,    21,     1,
     2,     3,   nil,     6,     9,    12,    14,    16,    19,    20,
   nil,   nil,   nil,     4,     7,    10,     3,   nil,     6,     9,
    12,    14,    16,    19,    20,   nil,   nil,   nil,     4,     7,
    10,   nil,   nil,   nil,   nil,   nil,   nil,    11,    13,    15,
    17,    18,    21,     1,     2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    11,    13,    15,    17,    18,    21,     1,     2,
     3,   nil,     6,     9,    12,    14,    16,    19,    20,   nil,
   nil,   nil,     4,     7,    10,     3,   nil,     6,     9,    12,
    14,    16,    19,    20,   nil,   nil,   nil,     4,     7,    10,
   nil,   nil,   nil,   nil,   nil,   nil,    11,    13,    15,    17,
    18,    21,     1,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    11,    13,    15,    17,    18,    21,     1,     2,    28,
    31,    34,   nil,   nil,   nil,    41,    43,    45,    47,    49,
    27,    30,    33,    37,    38,    40,    42,    44,    46,    48,
    50,    29,    32,    35,    36,    39,    28,    31,    34,   nil,
   nil,   nil,    41,    43,    45,    47,    49,    27,    30,    33,
    37,    38,    40,    42,    44,    46,    48,    50,    29,    32,
    35,    36,    39,    28,    31,    34,   nil,   nil,   nil,    41,
    43,    45,    47,    49,    27,    30,    33,    37,    38,    40,
    42,    44,    46,    48,    50,    29,    32,    35,    36,    28,
    31,    34,   nil,   nil,   nil,    41,    43,    45,    47,    49,
    27,    30,    33,    37,    38,    40,    42,    44,    46,    28,
    31,    34,   nil,   nil,   nil,    41,    43,    45,    47,    49,
    27,    30,    33,    37,    38,    40,    42,    44,    46,    28,
    31,    34,   nil,   nil,   nil,    41,    43,    45,    47,    49,
    27,    30,    33,    37,    38,    40,    42,    44,    46,    28,
    31,    34,   nil,   nil,   nil,    41,    43,    45,    47,    49,
    27,    30,    33,    37,    38,    40,    42,    44,    46,    28,
    31,    34,   nil,   nil,   nil,    41,    43,    45,    47,    49,
    27,    30,    33,    37,    38,    40,    42,    44,    46,    28,
    31,    34,   nil,   nil,   nil,    41,    43,    45,    47,    49,
    27,    30,    33,    37,    38,    40,    42,    44,    46,    28,
    31,    34,   nil,   nil,   nil,    41,    43,    45,    47,    49,
    27,    30,    33,    37,    38,    40,    28,    31,    34,   nil,
   nil,   nil,    41,    43,    45,    47,    49,    27,    30,    33,
    37,    38,    40,    28,    31,    34,   nil,   nil,   nil,    41,
    43,    45,    47,    49,    27,    30,    33,    37,    38,    40,
    28,    31,    34,   nil,   nil,   nil,    41,    43,    45,    47,
    49,    27,    30,    33,    37,    38,    28,    31,    34,   nil,
   nil,   nil,    41,    43,    45,    47,    49,    27,    30 ]

racc_action_check = [
     0,    24,     0,     0,     0,     0,     0,     0,     0,    78,
    78,    78,     0,     0,     0,     3,    37,     3,     3,     3,
     3,     3,     3,     3,    67,    67,    67,     3,     3,     3,
    67,    67,    67,    82,    82,    82,     0,     0,     0,     0,
     0,     0,     0,     0,    80,    80,    80,     5,    38,   nil,
   nil,     3,     3,     3,     3,     3,     3,     3,     3,     4,
   nil,     4,     4,     4,     4,     4,     4,     4,   nil,   nil,
   nil,     4,     4,     4,    50,   nil,    50,    50,    50,    50,
    50,    50,    50,    86,    86,    86,    50,    50,    50,    86,
    86,    86,   nil,   nil,   nil,     4,     4,     4,     4,     4,
     4,     4,     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    50,    50,    50,    50,    50,    50,    50,    50,     6,   nil,
     6,     6,     6,     6,     6,     6,     6,   nil,   nil,   nil,
     6,     6,     6,     7,   nil,     7,     7,     7,     7,     7,
     7,     7,    84,    84,    84,     7,     7,     7,    84,    84,
    84,   nil,   nil,   nil,     6,     6,     6,     6,     6,     6,
     6,     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,
     7,     7,     7,     7,     7,     7,     7,    49,   nil,    49,
    49,    49,    49,    49,    49,    49,   nil,   nil,   nil,    49,
    49,    49,     9,   nil,     9,     9,     9,     9,     9,     9,
     9,    64,    64,    64,     9,     9,     9,    64,    64,    64,
   nil,   nil,   nil,    49,    49,    49,    49,    49,    49,    49,
    49,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     9,     9,
     9,     9,     9,     9,     9,     9,    10,   nil,    10,    10,
    10,    10,    10,    10,    10,   nil,   nil,   nil,    10,    10,
    10,    12,   nil,    12,    12,    12,    12,    12,    12,    12,
   nil,   nil,   nil,    12,    12,    12,   nil,   nil,   nil,   nil,
   nil,   nil,    10,    10,    10,    10,    10,    10,    10,    10,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    12,    12,    12,
    12,    12,    12,    12,    12,    14,   nil,    14,    14,    14,
    14,    14,    14,    14,   nil,   nil,   nil,    14,    14,    14,
    15,   nil,    15,    15,    15,    15,    15,    15,    15,   nil,
   nil,   nil,    15,    15,    15,   nil,   nil,   nil,   nil,   nil,
   nil,    14,    14,    14,    14,    14,    14,    14,    14,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    15,    15,    15,    15,
    15,    15,    15,    15,    16,   nil,    16,    16,    16,    16,
    16,    16,    16,   nil,   nil,   nil,    16,    16,    16,    17,
   nil,    17,    17,    17,    17,    17,    17,    17,   nil,   nil,
   nil,    17,    17,    17,   nil,   nil,   nil,   nil,   nil,   nil,
    16,    16,    16,    16,    16,    16,    16,    16,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    17,    17,    17,    17,    17,
    17,    17,    17,    19,   nil,    19,    19,    19,    19,    19,
    19,    19,   nil,   nil,   nil,    19,    19,    19,    20,   nil,
    20,    20,    20,    20,    20,    20,    20,   nil,   nil,   nil,
    20,    20,    20,   nil,   nil,   nil,   nil,   nil,   nil,    19,
    19,    19,    19,    19,    19,    19,    19,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    20,    20,    20,    20,    20,    20,
    20,    20,    45,    22,    45,    45,    45,    45,    45,    45,
    45,    22,    22,    22,    45,    45,    45,    22,    22,    22,
    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,
    22,    22,    22,    22,    22,    22,    22,    22,    45,    45,
    45,    45,    45,    45,    45,    45,    23,   nil,    23,    23,
    23,    23,    23,    23,    23,    23,    23,    23,    23,    23,
    23,    23,    23,    23,    23,    23,    23,    23,    23,    23,
    23,    23,    23,    23,    23,    23,    23,    23,    23,    23,
    23,    23,    23,    23,    23,    23,    23,    23,    23,    23,
    48,   nil,    48,    48,    48,    48,    48,    48,    48,     8,
     8,     8,    48,    48,    48,     8,     8,     8,     8,     8,
     8,     8,     8,     8,     8,     8,     8,     8,     8,     8,
     8,     8,     8,     8,     8,     8,    48,    48,    48,    48,
    48,    48,    48,    48,    26,   nil,    26,    26,    26,    26,
    26,    26,    26,    26,    26,    26,    26,    26,    26,    26,
    26,    26,    26,    26,    26,    26,    26,    26,    26,    26,
    26,    26,    26,    26,    26,    26,    26,    26,    26,    26,
    26,    26,    26,    26,    26,    26,    26,    26,    27,   nil,
    27,    27,    27,    27,    27,    27,    27,   nil,   nil,   nil,
    27,    27,    27,    28,   nil,    28,    28,    28,    28,    28,
    28,    28,   nil,   nil,   nil,    28,    28,    28,   nil,   nil,
   nil,   nil,   nil,   nil,    27,    27,    27,    27,    27,    27,
    27,    27,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    28,
    28,    28,    28,    28,    28,    28,    28,    29,   nil,    29,
    29,    29,    29,    29,    29,    29,   nil,   nil,   nil,    29,
    29,    29,    30,   nil,    30,    30,    30,    30,    30,    30,
    30,   nil,   nil,   nil,    30,    30,    30,   nil,   nil,   nil,
   nil,   nil,   nil,    29,    29,    29,    29,    29,    29,    29,
    29,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    30,    30,
    30,    30,    30,    30,    30,    30,    31,   nil,    31,    31,
    31,    31,    31,    31,    31,   nil,   nil,   nil,    31,    31,
    31,    32,   nil,    32,    32,    32,    32,    32,    32,    32,
   nil,   nil,   nil,    32,    32,    32,   nil,   nil,   nil,   nil,
   nil,   nil,    31,    31,    31,    31,    31,    31,    31,    31,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    32,    32,    32,
    32,    32,    32,    32,    32,    33,   nil,    33,    33,    33,
    33,    33,    33,    33,   nil,   nil,   nil,    33,    33,    33,
    34,   nil,    34,    34,    34,    34,    34,    34,    34,   nil,
   nil,   nil,    34,    34,    34,   nil,   nil,   nil,   nil,   nil,
   nil,    33,    33,    33,    33,    33,    33,    33,    33,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    34,    34,    34,    34,
    34,    34,    34,    34,    35,   nil,    35,    35,    35,    35,
    35,    35,    35,   nil,   nil,   nil,    35,    35,    35,    36,
   nil,    36,    36,    36,    36,    36,    36,    36,   nil,   nil,
   nil,    36,    36,    36,   nil,   nil,   nil,   nil,   nil,   nil,
    35,    35,    35,    35,    35,    35,    35,    35,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    36,    36,    36,    36,    36,
    36,    36,    36,    47,   nil,    47,    47,    47,    47,    47,
    47,    47,   nil,   nil,   nil,    47,    47,    47,    46,   nil,
    46,    46,    46,    46,    46,    46,    46,   nil,   nil,   nil,
    46,    46,    46,   nil,   nil,   nil,   nil,   nil,   nil,    47,
    47,    47,    47,    47,    47,    47,    47,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    46,    46,    46,    46,    46,    46,
    46,    46,    39,   nil,    39,    39,    39,    39,    39,    39,
    39,   nil,   nil,   nil,    39,    39,    39,    40,   nil,    40,
    40,    40,    40,    40,    40,    40,   nil,   nil,   nil,    40,
    40,    40,   nil,   nil,   nil,   nil,   nil,   nil,    39,    39,
    39,    39,    39,    39,    39,    39,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    40,    40,    40,    40,    40,    40,    40,
    40,    41,   nil,    41,    41,    41,    41,    41,    41,    41,
   nil,   nil,   nil,    41,    41,    41,    42,   nil,    42,    42,
    42,    42,    42,    42,    42,   nil,   nil,   nil,    42,    42,
    42,   nil,   nil,   nil,   nil,   nil,   nil,    41,    41,    41,
    41,    41,    41,    41,    41,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    42,    42,    42,    42,    42,    42,    42,    42,
    43,   nil,    43,    43,    43,    43,    43,    43,    43,   nil,
   nil,   nil,    43,    43,    43,    44,   nil,    44,    44,    44,
    44,    44,    44,    44,   nil,   nil,   nil,    44,    44,    44,
   nil,   nil,   nil,   nil,   nil,   nil,    43,    43,    43,    43,
    43,    43,    43,    43,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    44,    44,    44,    44,    44,    44,    44,    44,    57,
    57,    57,   nil,   nil,   nil,    57,    57,    57,    57,    57,
    57,    57,    57,    57,    57,    57,    57,    57,    57,    57,
    57,    57,    57,    57,    57,    57,    55,    55,    55,   nil,
   nil,   nil,    55,    55,    55,    55,    55,    55,    55,    55,
    55,    55,    55,    55,    55,    55,    55,    55,    55,    55,
    55,    55,    55,    76,    76,    76,   nil,   nil,   nil,    76,
    76,    76,    76,    76,    76,    76,    76,    76,    76,    76,
    76,    76,    76,    76,    76,    76,    76,    76,    76,    69,
    69,    69,   nil,   nil,   nil,    69,    69,    69,    69,    69,
    69,    69,    69,    69,    69,    69,    69,    69,    69,    87,
    87,    87,   nil,   nil,   nil,    87,    87,    87,    87,    87,
    87,    87,    87,    87,    87,    87,    87,    87,    87,    85,
    85,    85,   nil,   nil,   nil,    85,    85,    85,    85,    85,
    85,    85,    85,    85,    85,    85,    85,    85,    85,    72,
    72,    72,   nil,   nil,   nil,    72,    72,    72,    72,    72,
    72,    72,    72,    72,    72,    72,    72,    72,    72,    66,
    66,    66,   nil,   nil,   nil,    66,    66,    66,    66,    66,
    66,    66,    66,    66,    66,    66,    66,    66,    66,    73,
    73,    73,   nil,   nil,   nil,    73,    73,    73,    73,    73,
    73,    73,    73,    73,    73,    73,    73,    73,    73,    79,
    79,    79,   nil,   nil,   nil,    79,    79,    79,    79,    79,
    79,    79,    79,    79,    79,    79,    83,    83,    83,   nil,
   nil,   nil,    83,    83,    83,    83,    83,    83,    83,    83,
    83,    83,    83,    81,    81,    81,   nil,   nil,   nil,    81,
    81,    81,    81,    81,    81,    81,    81,    81,    81,    81,
    77,    77,    77,   nil,   nil,   nil,    77,    77,    77,    77,
    77,    77,    77,    77,    77,    77,    70,    70,    70,   nil,
   nil,   nil,    70,    70,    70,    70,    70,    70,    70 ]

racc_action_pointer = [
    -2,   nil,   nil,    13,    57,    47,   116,   131,   558,   190,
   234,   nil,   249,   nil,   293,   308,   352,   367,   nil,   411,
   426,   nil,   470,   514,     1,   nil,   602,   646,   661,   705,
   720,   764,   779,   823,   838,   882,   897,   -23,     9,  1000,
  1015,  1059,  1074,  1118,  1133,   470,   956,   941,   558,   175,
    72,   nil,   nil,   nil,   nil,  1195,   nil,  1168,   nil,   nil,
   nil,   nil,   nil,   nil,   190,   nil,  1328,    13,   nil,  1248,
  1435,   nil,  1308,  1348,   nil,   nil,  1222,  1419,    -2,  1368,
    33,  1402,    22,  1385,   131,  1288,    72,  1268 ]

racc_action_default = [
   -45,   -31,   -32,   -45,   -45,   -45,   -45,   -45,    -1,   -45,
   -45,    -3,   -45,   -33,   -45,   -45,   -45,   -45,   -29,   -45,
   -45,   -30,   -45,   -45,   -45,   -25,   -45,   -45,   -45,   -45,
   -45,   -45,   -45,   -45,   -45,   -45,   -45,   -45,   -45,   -45,
   -45,   -45,   -45,   -45,   -45,   -45,   -45,   -45,   -45,   -45,
   -45,   -26,   -24,   -34,   -36,    -8,   -37,   -27,   -23,   -35,
    -4,    -5,    88,    -7,   -38,   -19,   -13,   -39,   -21,   -16,
   -20,   -18,   -17,    -9,    -6,   -28,   -22,   -14,   -42,   -10,
   -41,    -2,   -40,   -15,   -43,   -11,   -44,   -12 ]

racc_goto_table = [
     8,     5,   nil,    22,    23,   nil,    25,    26,   nil,    51,
    52,   nil,    53,   nil,    54,    55,    56,    57,   nil,    58,
    59,   nil,   nil,    61,   nil,   nil,    63,    64,    65,    66,
    67,    68,    69,    70,    71,    72,    73,   nil,   nil,    76,
    77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
    87 ]

racc_goto_check = [
     2,     1,   nil,     2,     2,   nil,     2,     2,   nil,     2,
     2,   nil,     2,   nil,     2,     2,     2,     2,   nil,     2,
     2,   nil,   nil,     2,   nil,   nil,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,   nil,   nil,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2 ]

racc_goto_pointer = [
   nil,     1,     0 ]

racc_goto_default = [
   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 47, :_reduce_none,
  3, 48, :_reduce_2,
  1, 48, :_reduce_3,
  3, 48, :_reduce_4,
  3, 48, :_reduce_5,
  3, 48, :_reduce_6,
  3, 48, :_reduce_7,
  2, 48, :_reduce_8,
  3, 48, :_reduce_9,
  3, 48, :_reduce_10,
  3, 48, :_reduce_11,
  3, 48, :_reduce_12,
  3, 48, :_reduce_13,
  3, 48, :_reduce_14,
  3, 48, :_reduce_15,
  3, 48, :_reduce_16,
  3, 48, :_reduce_17,
  3, 48, :_reduce_18,
  3, 48, :_reduce_19,
  3, 48, :_reduce_20,
  3, 48, :_reduce_21,
  3, 48, :_reduce_22,
  2, 48, :_reduce_23,
  2, 48, :_reduce_24,
  2, 48, :_reduce_25,
  2, 48, :_reduce_26,
  2, 48, :_reduce_27,
  3, 48, :_reduce_28,
  1, 48, :_reduce_29,
  1, 48, :_reduce_30,
  1, 48, :_reduce_31,
  1, 48, :_reduce_32,
  1, 48, :_reduce_33,
  2, 48, :_reduce_34,
  2, 48, :_reduce_35,
  2, 48, :_reduce_36,
  2, 48, :_reduce_37,
  3, 48, :_reduce_38,
  3, 48, :_reduce_39,
  3, 48, :_reduce_40,
  3, 48, :_reduce_41,
  3, 48, :_reduce_42,
  3, 48, :_reduce_43,
  3, 48, :_reduce_44 ]

racc_reduce_n = 45

racc_shift_n = 88

racc_token_table = {
  false => 0,
  :error => 1,
  :LEFT_ROUND_BRACKET => 2,
  :RIGHT_ROUND_BRACKET => 3,
  :MAX => 4,
  :MIN => 5,
  :NOT => 6,
  :PICKRANDOM => 7,
  :STRUCT => 8,
  :BAG => 9,
  :SUM => 10,
  :SET_MINUS => 11,
  :INTERSECT => 12,
  :UNION => 13,
  :ANY => 14,
  :ALL => 15,
  :EXISTS => 16,
  :DIVIDE => 17,
  :MODULO => 18,
  :MULTIPLY => 19,
  :AND => 20,
  :OR => 21,
  :PLUS => 22,
  :MINUS => 23,
  :IN => 24,
  :AS => 25,
  :GROUPAS => 26,
  :JOIN => 27,
  :DOT => 28,
  :COMMA => 29,
  :ORDERBY => 30,
  :EQUAL => 31,
  :GREATEREQUAL => 32,
  :GREATER => 33,
  :SMALLEREQUAL => 34,
  :SMALLER => 35,
  :DIFFERENCE => 36,
  :WHERE => 37,
  :expr_without_coma => 38,
  :NAME => 39,
  :AVG => 40,
  :UNIQUE => 41,
  :INTEGER_LITERAL => 42,
  :DOUBLE_LITERAL => 43,
  :STRING_LITERAL => 44,
  :BOOLEAN_LITERAL => 45 }

racc_nt_base = 46

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "LEFT_ROUND_BRACKET",
  "RIGHT_ROUND_BRACKET",
  "MAX",
  "MIN",
  "NOT",
  "PICKRANDOM",
  "STRUCT",
  "BAG",
  "SUM",
  "SET_MINUS",
  "INTERSECT",
  "UNION",
  "ANY",
  "ALL",
  "EXISTS",
  "DIVIDE",
  "MODULO",
  "MULTIPLY",
  "AND",
  "OR",
  "PLUS",
  "MINUS",
  "IN",
  "AS",
  "GROUPAS",
  "JOIN",
  "DOT",
  "COMMA",
  "ORDERBY",
  "EQUAL",
  "GREATEREQUAL",
  "GREATER",
  "SMALLEREQUAL",
  "SMALLER",
  "DIFFERENCE",
  "WHERE",
  "expr_without_coma",
  "NAME",
  "AVG",
  "UNIQUE",
  "INTEGER_LITERAL",
  "DOUBLE_LITERAL",
  "STRING_LITERAL",
  "BOOLEAN_LITERAL",
  "$start",
  "target",
  "expr" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'SBQL.racc', 23)
  def _reduce_2(val, _values, result)
     result = CommaExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 24)
  def _reduce_3(val, _values, result)
     result = e 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 25)
  def _reduce_4(val, _values, result)
     result = StructExpression.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 26)
  def _reduce_5(val, _values, result)
     result = AnyExpression.new(val[1],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 27)
  def _reduce_6(val, _values, result)
     result = AsExpression.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 28)
  def _reduce_7(val, _values, result)
     result = AllExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 29)
  def _reduce_8(val, _values, result)
    result = AvgExpression.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 30)
  def _reduce_9(val, _values, result)
     result = DifferentExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 31)
  def _reduce_10(val, _values, result)
     result = DotExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 32)
  def _reduce_11(val, _values, result)
     result = EqualExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 33)
  def _reduce_12(val, _values, result)
     result = GreatherEqualExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 34)
  def _reduce_13(val, _values, result)
     result = GreatherExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 35)
  def _reduce_14(val, _values, result)
     result = JoinExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 36)
  def _reduce_15(val, _values, result)
     result = OrderByExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 37)
  def _reduce_16(val, _values, result)
     result = LessEqualExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 38)
  def _reduce_17(val, _values, result)
     result = LessExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 39)
  def _reduce_18(val, _values, result)
     result = UnionExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 40)
  def _reduce_19(val, _values, result)
     result = SetMinusExpression.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 41)
  def _reduce_20(val, _values, result)
     result = InExpression.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 42)
  def _reduce_21(val, _values, result)
     result = IntersectExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 43)
  def _reduce_22(val, _values, result)
     result = WhereExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 44)
  def _reduce_23(val, _values, result)
     result = BagExpression.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 45)
  def _reduce_24(val, _values, result)
     result = ExistsExpression.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 46)
  def _reduce_25(val, _values, result)
     result = MaxExpression.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 47)
  def _reduce_26(val, _values, result)
     result = MinExpression.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 48)
  def _reduce_27(val, _values, result)
     result = new UniqueExpression(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 49)
  def _reduce_28(val, _values, result)
     result = GroupAsExpression.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 50)
  def _reduce_29(val, _values, result)
     result = (val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 51)
  def _reduce_30(val, _values, result)
     result = (val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 52)
  def _reduce_31(val, _values, result)
     result = (val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 53)
  def _reduce_32(val, _values, result)
     result = (val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 54)
  def _reduce_33(val, _values, result)
     result = NameExpression.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 55)
  def _reduce_34(val, _values, result)
     result = NotExpression.new(val[1])  
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 56)
  def _reduce_35(val, _values, result)
     result = SumExpression.new(val[1])  
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 57)
  def _reduce_36(val, _values, result)
     result = PickRandomExpression.new(val[1])  
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 58)
  def _reduce_37(val, _values, result)
     result = StructExpression.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 59)
  def _reduce_38(val, _values, result)
     result = PlusExpression.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 60)
  def _reduce_39(val, _values, result)
     result = MinusExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 61)
  def _reduce_40(val, _values, result)
     result = MultiplyExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 62)
  def _reduce_41(val, _values, result)
     result = ModuloExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 63)
  def _reduce_42(val, _values, result)
     result = DivideExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 64)
  def _reduce_43(val, _values, result)
     result = AndExpression.new(val[0],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'SBQL.racc', 65)
  def _reduce_44(val, _values, result)
     result = OrExpression.new(val[0],val[2]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class SBQLParser
